name: Semantic Release

on:
  workflow_call:
    secrets:
      GH_PAT:
        description: "bluebot-gh-deploys user's Personal Access Token for pushing releases"
        required: false
      SLACK_WEBHOOK:
        description: "Slack webhook URL for release notifications"
        required: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT || github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT || github.token }}
        run: |
          set +e  # Don't exit on error
          cd $GITHUB_WORKSPACE
          npx --package semantic-release --package @semantic-release/commit-analyzer --package @semantic-release/release-notes-generator --package @semantic-release/github --package @semantic-release/changelog --package @semantic-release/git --package @semantic-release/npm -- semantic-release > release.log 2>&1
          semantic_release_exit_code=$?

          # Extract the published version from the log if present
          if grep -q 'Published release' release.log; then
            version=$(grep 'Published release' release.log | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
            echo "VERSION=$version" >> $GITHUB_OUTPUT
            echo "RELEASE_CREATED=true" >> $GITHUB_OUTPUT
            echo "Release created: v$version"
          else
            echo "VERSION=" >> $GITHUB_OUTPUT
            echo "RELEASE_CREATED=false" >> $GITHUB_OUTPUT
            if [ $semantic_release_exit_code -eq 0 ]; then
              echo "No release necessary"
            else
              echo "Semantic release failed with exit code $semantic_release_exit_code"
              cat release.log  # Show the log for debugging
              exit $semantic_release_exit_code  # Fail the step with the original exit code
            fi
          fi

      - name: Slack notification
        if: steps.release.outputs.RELEASE_CREATED == 'true'
        run: |
          if [ -n "${{ secrets.SLACK_WEBHOOK }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
            --data '{"blocks": [{"type": "section", "text": {"type": "mrkdwn", "text": ":sunglasses: *<https://github.com/${{ github.repository }}/releases/tag/v${{ steps.release.outputs.VERSION }}|v${{ steps.release.outputs.VERSION }}>* of *${{ github.repository }}* released by *${{ github.actor }}*"}}]}' \
            ${{ secrets.SLACK_WEBHOOK }}
          else
            echo "No Slack webhook configured, skipping notification."
          fi